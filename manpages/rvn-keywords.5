.Dd December 13, 2023
.Dt RVN-KEYWORDS 5
.Os
.Sh NAME
.Nm Keywords
.Nd Keyword definition files
.Sh DESCRIPTION
.Xr rvn-create 8
optionally processes a whitelist file which provides a manifest for the package.
This whitelist format is documented in the
.Xr rvn-create 8
manpage.
.Pp
.Nm
are UCL-formatted files that extend the functionality of the whitelist.
These extensions can affect file and directory attributes or run custom scripts
and specific phases of package management.
.Pp
The arguments of the Bourne scripts are referenced by $@ (list of all
arguments) or $<number>.
Legacy scripts use \%%@ and or \%%<number> tokens.
These tokens will be converted to the standard shell arguments to maintain
backwards compatibility.
.Pp
Every action must have an argument, and the position of the arguments
match the order the of the actions.
The first argument goes with the first action, the second argument with
the second action, and so forth.
.Pp
The format is the following:
.Bl -tag -width Ds
.It Cm actions
Array of actions which defines what do to the argument(s) of the keywords.
Valid actions are:
.Bl -tag -width Ds
.It Va dir
Consider the argument of the keyword as a directory and register it as such in
the package
.It Va file
Consider the argument of the keyword as a regular file and register it as such
in the package
.El
.It Cm attributes
attributes that can be set to a file or a directory depending if actions has
been set.
It will take the precedence over the attributes that may have been set when
calling the keyword.
Attributes can be:
.Bl -tag -width Ds
.It Cm owner Ar string
Name of the owner of the file or directory.
.It Cm group Ar string
Name of the group of the file or directory.
.It Cm mode Ar string
octal mode of the file or directory
.El
.It Cm deprecated
Boolean to mark a keyword as deprecated
.It Cm deprecation_message
Message to be show if the keyword is used and mark as deprecated
.It Cm prepackaging
lua script which is executed at the packaging time.
Useful to add some input validation.
.It Cm pre-install
shell script to be run during the pre-install phase.
It will be merged with any existing pre-install scripts.
The script will be formatted respecting the escape sequences define later.
.It Cm post-install
shell script to be run during the post-install phase.
It will be merged with any existing post-install scripts.
The script will be formatted respecting the escape sequences define later.
.It Cm pre-deinstall
shell script to be run during the pre-deinstall phase.
It will be merged with any existing pre-deinstall scripts.
The script will be formatted respecting the escape sequences define later.
.It Cm post-deinstall
shell script to be run during the post-deinstall phase.
It will be merged with any existing post-deinstall scripts.
The script will be formatted respecting the escape sequences define later.
.It Cm pre-install-lua
Lua script to be run during the pre-install phase.
It will be appended with any existing array of lua pre-install scripts
The script will be formatted respecting the escape sequences define later.
.It Cm post-install-lua
Lua script to be run during the post-install phase.
It will be appended with any existing array of lua post-install scripts
The script will be formatted respecting the escape sequences define later.
.It Cm pre-deinstall-lua
Lua script to be run during the pre-deinstall phase.
It will be appended with any existing array of lua pre-deinstall scripts
The script will be formatted respecting the escape sequences define later.
.It Cm post-deinstall-lua
Lua script to be run during the post-deinstall phase.
It will be appended with any existing array of lua post-deinstall scripts
The script will be formatted respecting the escape sequences define later.
.It Cm messages
Array of test messages that can be passed to the users.
Valid information by entry in the array are:
.Bl -tag -width xxxx
.It Cm message Ar string
actual message to be shown to the users.
.It Cm type Op Ar upgrade | Ar remove | Ar install | Ar always
defines in which contect the message should be shown to the users.
If not set, the message will always be printed.
.El
.El
.Sh ESCAPE SEQUENCE
Unlike previous incarnations, escape sequences such as "\&%D", "\&%F",
"\&%B", and "\&%f" are not supported.
The latter three would depend on a previous line, requiring a two-line set
to work.
This requirement isn't feasible as packaging lists are sorted and position
is not guaranteed.
The "\&%D" sequence can be replaced with the PKG_PREFIX environment variable
and there are alternatives to other historical sequences.
.Sh SEE ALSO
.Xr rvn-lua-scripts 5 ,
.Xr rvn-scripts 5 ,
.Xr rvn 8 ,
.Xr rvn-alias 8 ,
.Xr rvn-config 8 ,
.Xr rvn-create 8 ,
.Xr rvn-genrepo 8 ,
.Xr rvn-info 8 ,
.Xr rvn-install 8 ,
.Xr rvn-shell 8 ,
.Xr rvn-shlib 8 ,
.Xr rvn-version 8 ,
.Xr rvn-which 8
